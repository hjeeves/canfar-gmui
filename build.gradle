import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'war'

    // IntelliJ IDEA plugin here to allow integration tests to appear properly in IDEs.
    id 'idea'
}

repositories {
    mavenLocal()
    jcenter()

    maven {
        url = 'http://www.cadc-ccda.hia-iha.nrc-cnrc.gc.ca/m2repo'
    }
}

configurations.all {
    resolutionStrategy {
        force 'org.apache.commons:commons-configuration2:2.3'
    }
}

dependencies {
    compile 'org.springframework:spring-beans:4.3.16.RELEASE'
    compile 'org.restlet.jee:org.restlet.ext.spring:2.3.+'

    compile 'org.opencadc:cadc-gmui-server:[1.2.2, )'

    runtime 'jstl:jstl:1.+'

    testCompile 'junit:junit:4.+'
    testCompile 'org.skyscreamer:jsonassert:1.+'
    testCompile 'org.easymock:easymock:3.+'
    testCompile 'org.apache.commons:commons-text:[1.3,)'
    testCompile 'org.opencadc:cadc-web-test:[1.0.2, )'
    testCompile 'org.seleniumhq.selenium:selenium-java:3.+'
}

sourceCompatibility = '1.7'
group = 'ca.nrc.cadc'
version = '1007'

ext {
    intTest_user_name = 'CADCtest'
    intTest_user_password = 'sywymUL4'

    docker_image_name = 'mach378.cadc.dao.nrc.ca:5000/canfar-gmui'

    // Change this value to test other locations, such as Production or RC.
    intTest_default_web_app_url = 'http://rcapps.canfar.net'
    intTest_default_web_app_endpoint = '/gmui'
}

war {
    // Trying to fix static file caching on new build.
    eachFile {
        if (it.name.endsWith('.jsp')) {
            filter(ReplaceTokens, tokens: [version: project.version])
        }
    }

    archiveName = 'canfar-gmui##' + project.version + '.war'
}

sourceSets {
    intTest
}

configurations {
    intTestCompile
    intTestCompile.extendsFrom(testCompile)
}

idea {
    module {
        //and some extra test source dirs
        testSourceDirs += file('src/intTest/java')
        scopes.TEST.plus += [ configurations.intTestCompile ]
    }
}

['firefox', 'chrome'].each { driver ->
    task "intTest${driver.capitalize()}"(type: Test) { driverTest ->
        testClassesDir = sourceSets.intTest.output.classesDir
        classpath = sourceSets.intTest.runtimeClasspath
        reports {
            html.destination = reporting.file("$name/html")
        }
        dependencies {
            intTestCompile 'junit:junit:4.+'
            intTestCompile 'ca.nrc.cadc:web-test:1.+'
            intTestCompile 'org.seleniumhq.selenium:selenium-java:2.53.1'
//            intTestCompile 'org.seleniumhq.selenium:selenium-java:3.+'
        }

        systemProperty "driver", "${driver}"

        if (project.hasProperty('intTest_selenium_server_url')) {
            systemProperty 'selenium.server.url', project.intTest_selenium_server_url
            logger.info('Running browser tests on ' + project.intTest_selenium_server_url)
        }
        else {
            systemProperty 'selenium.server.url', 'http://cadcint2.cadc.dao.nrc.ca:4444'
        }

        if (project.hasProperty('intTest_web_app_url')) {
            systemProperty 'web.app.url', project.intTest_web_app_url
        }
        else {
            systemProperty 'web.app.url', project.intTest_default_web_app_url
        }

        systemProperty 'user.name', project.intTest_user_name
        systemProperty 'user.password', project.intTest_user_password

        maxParallelForks = 1
    }
}
